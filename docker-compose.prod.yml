version: '3.8'

services:
  client:
    container_name: client_container
    build:
      context: ./client
      dockerfile: Dockerfile.prod
    environment:
      - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL:-http://localhost:4000}
    ports:
      - "${CLIENT_PORT:-3000}:3000"
    networks:
      - app-network
    depends_on:
      - api
    restart: unless-stopped

  api:
    container_name: api_container
    build:
      context: ./server
      dockerfile: Dockerfile.prod
    environment:
      - NODE_ENV=production
      - PORT=${PORT:-4000}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-news_api}?schema=public
    ports:
      - "${API_PORT:-4000}:4000"
    command: sh -c "npx prisma generate --schema=/app/prisma/schema.prisma && npx prisma migrate deploy --schema=/app/prisma/schema.prisma"
    networks:
      - app-network
      - postgres-network
    depends_on:
      - postgres
    restart: unless-stopped

  postgres:
    container_name: postgres_container
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-news_api}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - postgres-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_ADMIN_DEFAULT_EMAIL:-pgadmin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PG_ADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "${PG_ADMIN_PORT:-5050}:80"
    networks:
      - postgres-network
    depends_on:
      - postgres
    restart: unless-stopped

networks:
  app-network:
    driver: bridge
  postgres-network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
