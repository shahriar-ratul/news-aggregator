# Build stage
FROM node:20-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY pnpm-lock.yaml ./

# Install dependencies
RUN npm install -g pnpm
RUN pnpm install --frozen-lockfile

# Copy source code
COPY . .

ARG DATABASE_URL
ENV DATABASE_URL=${DATABASE_URL}

# Only generate Prisma client during build
RUN npx prisma generate

RUN chmod -R 777 /app/prisma

# Build application
RUN pnpm build

# Production stage
FROM node:20-alpine AS runner

WORKDIR /app

# Copy necessary files from builder
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json

# Set environment variables
ENV NODE_ENV=production
ENV PORT=4000

EXPOSE 4000

# Add wait-for-it script
COPY wait-for-it.sh /wait-for-it.sh
RUN chmod +x /wait-for-it.sh

# Migrations and start will happen at runtime
CMD ["/wait-for-it.sh", "postgres", "sh", "-c", "npx prisma migrate deploy && npm start"]
